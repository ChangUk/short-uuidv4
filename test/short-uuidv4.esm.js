String.prototype.padStart=function(t,e){return t>>=0,e=String(void 0!==e?e:" "),this.length>t?String(this):((t-=this.length)>e.length&&(e+=e.repeat(t/e.length)),e.slice(0,t)+String(this))};class t{constructor(t,e){if(!(t&&e&&t.length&&e.length))throw new Error("Invalid base string!");this.srcBase=t,this.dstBase=e}run(t){if(this.srcBase===this.dstBase)return t;let e=t.length,r=0,s=0,n=this.srcBase.length,i=this.dstBase.length,a="",h={};for(let r=0;r<e;r++)h[r]=this.srcBase.indexOf(t[r]);do{s=0,r=0;for(let t=0;t<e;t++)s=s*n+h[t],s>=i?(h[r++]=parseInt((s/i).toString(),10),s%=i):r>0&&(h[r++]=0);e=r,a=this.dstBase[s]+a}while(0!=r);return a}}class e{constructor(){}static get BASE_DEF(){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"}static get BASE_BIN(){return"01"}static get BASE_OCT(){return"01234567"}static get BASE_DEC(){return"0123456789"}static get BASE_HEX(){return"0123456789abcdef"}checkBase(t){if([...new Set(Array.from(t))].length!==t.length)throw new Error("The given base string has duplicate characters resulting in unreliable results.")}uuidv4(){let t=window.crypto||window.msCrypto;return t?"10000000-1000-4000-8000-100000000000".replace(/[018]/g,(e=>(e^t.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))):""}new(){return this.generate(e.BASE_DEF)}generate(t=e.BASE_DEF){return this.checkBase(t),this.translate(this.uuidv4(),e.BASE_HEX,t)}translate(r,s=e.BASE_DEF,n=e.BASE_HEX){this.checkBase(s),this.checkBase(n),r=r.replace(/-/g,"");let i=Math.ceil(Math.log(Math.pow(2,128))/Math.log(n.length));return this.formatUuidV4(new t(s,n).run(r).padStart(i,n[0]))}formatUuidV4(t){const e=t.match(/(\w{8})(\w{4})(\w{4})(\w{4})(\w{12})/);return e?[e[1],e[2],e[3],e[4],e[5]].join("-"):t}}export{e as ShortUuidV4};
